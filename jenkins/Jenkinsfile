// Testing out some pipeline stuff

pipeline{
	agent none

	environment{
		sonarKey = credentials('sonar_project_key')
		sonarToken = credentials('sonar_token_1')
		docker_login = credentials('docker_token_kradditz')
		docker_reg = "kradditz"
		docker_file_path = './docker/python.Dockerfile'
		project_name = 'python_project'
		docker_image = "${docker_reg}/${project_name}:${BUILD_NUMBER}"
	}

	stages{
		
		stage('setup'){
			agent any
			steps{
				script{
					env.MINOR_VERSION = sh(returnStdout: true, script: "git rev-list --all --count").trim()
					currentBuild.setDisplayName("${env.MINOR_VERSION}")
					echo "${env.MINOR_VERSION}"
				}
			}
		}

		stage('static analysis'){
			agent{
				docker{
					image 'sonarsource/sonar-scanner-cli:latest'
					
					
					
				}
			}
			steps{
				script{
					
					
					
					sh '''
						
						pwd
						sonar-scanner \
						-Dsonar.organization=yeehha \
						-Dsonar.projectKey=${sonarKey} \
						-Dsonar.sources=. \
						-Dsonar.host.url=https://sonarcloud.io \
						-Dsonar.login=${sonarToken} \
						

					'''
				}
			}
		}

		stage('dockerize'){
			agent any
			
			steps{
				script{
					
						sh '''
						docker login -u ${docker_reg} -p ${docker_login}
						docker build -t ${docker_image} -f ${docker_file_path} .
						docker push ${docker_image}
					'''
					}
				
			}
		}
	}
}